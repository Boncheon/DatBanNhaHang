/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Form_Staff;

import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import raven.chartBDduong.ModelChart;
import Model.ModelData;
import main.config.DBConnect;

/**
 *
 * @author Admin
 */
public class BieuDoCot_from extends javax.swing.JPanel {

    /**
     * Creates new form BieuDoCot_from
     */
    public BieuDoCot_from() {
        initComponents();
        this.add(new JLabel("Biểu Đồ Cột"));
        chart1.addLegend("Tổng Doanh Thu", new Color(245, 189, 135));
        chart1.addLegend("Số hóa đơn", new Color(135, 189, 245));
        chart1.addLegend("Triết Khấu", new Color(189, 135, 245));
        chart1.addLegend("Lợi Nhuận", new Color(139, 229, 222));
        setData();
    }
private void setData() {
    try {
        List<ModelData> lists = new ArrayList<>();
        String sql = "SELECT " +
                     "FORMAT(NgayTao, 'MM') AS [Tháng], " +
                     "COUNT(MaHoaDon) AS SoLuongHoaDon, " +
                     "SUM(TongSauGiam) AS TongDoanhThu, " +
                     "SUM(Chietkhau) AS TrietKhau " +
                     "FROM HoaDon " +
                     "WHERE TrangThai = 1 " +
                     "GROUP BY FORMAT(NgayTao, 'MM')";
        PreparedStatement p = DBConnect.getConnection().prepareStatement(sql);
        ResultSet r = p.executeQuery();
        while (r.next()) {
            String month = r.getString("Tháng");
            double revenue = r.getDouble("TongDoanhThu");
            double discount = r.getDouble("TrietKhau");
            double profit = revenue - discount; // Giả định rằng lợi nhuận là doanh thu trừ chiết khấu
            lists.add(new ModelData(month, revenue, discount, profit));
        }
        r.close();
        p.close();

        // Thêm dữ liệu vào biểu đồ
        for (ModelData d : lists) {
            double[] data = new double[] {
                d.getAmount(), // Income
                d.getCost(), // Expense
                d.getProfit(), // Profit
                d.getCost() // Cost (nếu cần thiết, bạn có thể thay đổi tên biến này)
            };
            chart1.addData(new raven.chartBDcot.ModelChart(d.getMonth(), data));
        }

        // Bắt đầu hiển thị dữ liệu với hiệu ứng hoạt hình
        chart1.start();
    } catch (Exception e) {
        e.printStackTrace();
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chart1 = new raven.chartBDcot.Chart();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chart1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chart1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private raven.chartBDcot.Chart chart1;
    // End of variables declaration//GEN-END:variables
}
